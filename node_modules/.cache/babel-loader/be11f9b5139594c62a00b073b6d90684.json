{"remainingRequest":"/Users/nandamhuis/Documents/giphy-vibes/demo/node_modules/babel-loader/lib/index.js!/Users/nandamhuis/Documents/giphy-vibes/demo/node_modules/eslint-loader/index.js??ref--13-0!/Users/nandamhuis/Documents/giphy-vibes/demo/src/vuex/actions/giphies.js","dependencies":[{"path":"/Users/nandamhuis/Documents/giphy-vibes/demo/src/vuex/actions/giphies.js","mtime":1614455942787},{"path":"/Users/nandamhuis/Documents/giphy-vibes/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nandamhuis/Documents/giphy-vibes/demo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/nandamhuis/Documents/giphy-vibes/demo/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZmV0Y2hHaXBoaWVzIH0gZnJvbSAnQC9oZWxwZXJzL2dpcGh5LWhlbHBlcic7CmV4cG9ydCB2YXIgR0lQSElFU19SRVFVRVNUID0gJ0dJUEhJRVNfUkVRVUVTVCc7CmV4cG9ydCB2YXIgR0lQSElFU19TVUNDRVNTID0gJ0dJUEhJRVNfU1VDQ0VTUyc7CmV4cG9ydCB2YXIgR0lQSElFU19GQUlMVVJFID0gJ0dJUEhJRVNfRkFJTFVSRSc7Ci8qKgogKiBHZXRHaXBoaWVzdWNjZXMgZmlsbHMgdGhlIHN0YXRlIHdpdGggdGhlIGdpcGh5IHJlcXVlc3QgdG8gaW5kaWNhdGUgd2UgYXJlIGZldGNoaW5nIGdpcGhpZXMKICogQHBhcmFtIHtPYmplY3R9IHN0YXRlIC0gVGhlIHZ1ZXggc3RhdGUgdGhhdCB3ZSB3aWxsIG1hbmlwdWxhdGUKICovCgpleHBvcnQgdmFyIGdldEdpcGhpZXNSZXF1ZXN0ID0gZnVuY3Rpb24gZ2V0R2lwaGllc1JlcXVlc3Qoc3RhdGUpIHsKICB2YXIgZGF0YSA9IHsKICAgIHR5cGU6IEdJUEhJRVNfUkVRVUVTVAogIH07CiAgc3RhdGUuY29tbWl0KCdnZXRHaXBoaWVzJywgZGF0YSk7Cn07Ci8qKgogKiBHZXRHaXBoaWVzdWNjZXMgZmlsbHMgdGhlIHN0YXRlIHdpdGggdGhlIGdpcGh5IHBheWxvYWQgd2hlbiBzdWNjZXNzZnVsCiAqIEBwYXJhbSB7T2JqZWN0fSBzdGF0ZSAtIFRoZSB2dWV4IHN0YXRlIHRoYXQgd2Ugd2lsbCBtYW5pcHVsYXRlCiAqIEBwYXJhbSB7ZXJyb3J9IHBheWxvYWQgLSBUaGUgcGF5bG9hZCB0byBwbGFjZSBpbiB0aGUgc3RhdGUKICovCgpleHBvcnQgdmFyIGdldEdpcGhpZXNTdWNjZXMgPSBmdW5jdGlvbiBnZXRHaXBoaWVzU3VjY2VzKHN0YXRlLCBwYXlsb2FkKSB7CiAgdmFyIGRhdGEgPSB7CiAgICB0eXBlOiBHSVBISUVTX1NVQ0NFU1MsCiAgICBwYXlsb2FkOiBwYXlsb2FkLmRhdGEKICB9OwogIHN0YXRlLmNvbW1pdCgnZ2V0R2lwaGllcycsIGRhdGEpOwp9OwovKioKICogU2V0IGEgZmFpbHVyZSBvYmplY3QgdG8gdGhlIHZ1ZXggc3RhdGUgaWYgdGhlIGNhbGwgZmFpbHMgZm9yIGFueSByZWFzb24KICogQHBhcmFtIHtPYmplY3R9IHN0YXRlIC0gVGhlIHZ1ZXggc3RhdGUgdGhhdCB3ZSB3aWxsIG1hbmlwdWxhdGUKICogQHBhcmFtIHtlcnJvcn0gZXJyb3IgLSBUaGUgZXJyb3IgdG8gcGxhY2UgaW4gdGhlIHN0YXRlCiAqLwoKZXhwb3J0IHZhciBnZXRHaXBoaWVzRmFpbHVyZSA9IGZ1bmN0aW9uIGdldEdpcGhpZXNGYWlsdXJlKHN0YXRlLCBlcnJvcikgewogIHZhciBkYXRhID0gewogICAgdHlwZTogR0lQSElFU19GQUlMVVJFLAogICAgZXJyb3I6IGVycm9yCiAgfTsKICBzdGF0ZS5jb21taXQoJ2dldEdpcGhpZXMnLCBkYXRhKTsKfTsKLyoqCiAqIEZldGNoIEdpcGhpZXMgd2l0aCBhIHN1YmplY3QsIG9mZnNldCBhbmQgbGltaXQsIHBhcmFtZXRlcnMgZGVzdHJ1Y3R1cmVkLCB1c2luZyB0aGUgZ2lwaHloZWxwZXIKICogQHBhcmFtIHtPYmplY3R9IHN0YXRlIC0gVGhlIHZ1ZXggc3RhdGUgdGhhdCB3ZSB3aWxsIG1hbmlwdWxhdGUKICogQHBhcmFtIHtPYmplY3R9IHBhcmFtZXRlcnMgLSBUaGUgcGFyYW1ldGVycyBvYmplY3Qgd2l0aCB0aGUgcGFyYW1zIGZvciB0aGUgZ2lwaGllcwogKiBAcGFyYW0ge1N0cmluZ30gcGFyYW1ldGVycy5zdWJqZWN0IC0gVGhlIHN1YmplY3QgdG8gZ2V0IGdpcGhpZXMgYWJvdXQKICogQHBhcmFtIHtTdHJpbmd9IHBhcmFtZXRlcnMub2Zmc2V0IC0gVGhlIG9mZnNldCBvZiBwYWdpbmF0ZWQgZ2lwaGllcwogKiBAcGFyYW0ge1N0cmluZ30gcGFyYW1ldGVycy5saW1pdCAtIFRoZSBsaW1pdCBvZiBnaXBoaWVzIHRvIGdldAogKi8KCmV4cG9ydCB2YXIgZ2V0R2lwaGllcyA9IGZ1bmN0aW9uIGdldEdpcGhpZXMoc3RhdGUsIF9yZWYpIHsKICB2YXIgc3ViamVjdCA9IF9yZWYuc3ViamVjdCwKICAgICAgb2Zmc2V0ID0gX3JlZi5vZmZzZXQsCiAgICAgIGxpbWl0ID0gX3JlZi5saW1pdDsKICBzdGF0ZS5kaXNwYXRjaCgnZ2V0R2lwaGllc1JlcXVlc3QnKTsKICByZXR1cm4gZmV0Y2hHaXBoaWVzKHN1YmplY3QsIG9mZnNldCwgbGltaXQpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgc3RhdGUuZGlzcGF0Y2goJ2dldEdpcGhpZXNTdWNjZXMnLCB7CiAgICAgIGRhdGE6IHJlc3VsdC5kYXRhCiAgICB9KTsKICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgIHN0YXRlLmRpc3BhdGNoKCdnZXRHaXBoaWVzRmFpbHVyZScsIGVycm9yKTsKICB9KTsKfTs="},{"version":3,"sources":["/Users/nandamhuis/Documents/giphy-vibes/demo/src/vuex/actions/giphies.js"],"names":["fetchGiphies","GIPHIES_REQUEST","GIPHIES_SUCCESS","GIPHIES_FAILURE","getGiphiesRequest","state","data","type","commit","getGiphiesSucces","payload","getGiphiesFailure","error","getGiphies","subject","offset","limit","dispatch","then","result","catch"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,wBAA3B;AAEA,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP;AACA;AACA;AACA;;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AACxC,MAAMC,IAAI,GAAG;AACXC,IAAAA,IAAI,EAAEN;AADK,GAAb;AAGAI,EAAAA,KAAK,CAACG,MAAN,CAAa,YAAb,EAA2BF,IAA3B;AACD,CALM;AAOP;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,KAAD,EAAQK,OAAR,EAAoB;AAClD,MAAMJ,IAAI,GAAG;AACXC,IAAAA,IAAI,EAAEL,eADK;AAEXQ,IAAAA,OAAO,EAAEA,OAAO,CAACJ;AAFN,GAAb;AAIAD,EAAAA,KAAK,CAACG,MAAN,CAAa,YAAb,EAA2BF,IAA3B;AACD,CANM;AAQP;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACN,KAAD,EAAQO,KAAR,EAAkB;AACjD,MAAMN,IAAI,GAAG;AACXC,IAAAA,IAAI,EAAEJ,eADK;AAEXS,IAAAA,KAAK,EAALA;AAFW,GAAb;AAIAP,EAAAA,KAAK,CAACG,MAAN,CAAa,YAAb,EAA2BF,IAA3B;AACD,CANM;AAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACR,KAAD,QAAqC;AAAA,MAA5BS,OAA4B,QAA5BA,OAA4B;AAAA,MAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAC7DX,EAAAA,KAAK,CAACY,QAAN,CAAe,mBAAf;AAEA,SAAOjB,YAAY,CAACc,OAAD,EAAUC,MAAV,EAAkBC,KAAlB,CAAZ,CACFE,IADE,CACG,UAAAC,MAAM,EAAI;AACdd,IAAAA,KAAK,CAACY,QAAN,CAAe,kBAAf,EAAmC;AAACX,MAAAA,IAAI,EAAEa,MAAM,CAACb;AAAd,KAAnC;AACD,GAHE,EAIFc,KAJE,CAII,UAAAR,KAAK,EAAI;AACdP,IAAAA,KAAK,CAACY,QAAN,CAAe,mBAAf,EAAoCL,KAApC;AACD,GANE,CAAP;AAOD,CAVM","sourcesContent":["import {fetchGiphies} from '@/helpers/giphy-helper';\n\nexport const GIPHIES_REQUEST = 'GIPHIES_REQUEST';\nexport const GIPHIES_SUCCESS = 'GIPHIES_SUCCESS';\nexport const GIPHIES_FAILURE = 'GIPHIES_FAILURE';\n\n/**\n * GetGiphiesucces fills the state with the giphy request to indicate we are fetching giphies\n * @param {Object} state - The vuex state that we will manipulate\n */\nexport const getGiphiesRequest = state => {\n  const data = {\n    type: GIPHIES_REQUEST\n  };\n  state.commit('getGiphies', data);\n};\n\n/**\n * GetGiphiesucces fills the state with the giphy payload when successful\n * @param {Object} state - The vuex state that we will manipulate\n * @param {error} payload - The payload to place in the state\n */\nexport const getGiphiesSucces = (state, payload) => {\n  const data = {\n    type: GIPHIES_SUCCESS,\n    payload: payload.data\n  };\n  state.commit('getGiphies', data);\n};\n\n/**\n * Set a failure object to the vuex state if the call fails for any reason\n * @param {Object} state - The vuex state that we will manipulate\n * @param {error} error - The error to place in the state\n */\nexport const getGiphiesFailure = (state, error) => {\n  const data = {\n    type: GIPHIES_FAILURE,\n    error\n  };\n  state.commit('getGiphies', data);\n};\n\n/**\n * Fetch Giphies with a subject, offset and limit, parameters destructured, using the giphyhelper\n * @param {Object} state - The vuex state that we will manipulate\n * @param {Object} parameters - The parameters object with the params for the giphies\n * @param {String} parameters.subject - The subject to get giphies about\n * @param {String} parameters.offset - The offset of paginated giphies\n * @param {String} parameters.limit - The limit of giphies to get\n */\nexport const getGiphies = (state, {subject, offset, limit}) => {\n  state.dispatch('getGiphiesRequest');\n\n  return fetchGiphies(subject, offset, limit)\n      .then(result => {\n        state.dispatch('getGiphiesSucces', {data: result.data});\n      })\n      .catch(error => {\n        state.dispatch('getGiphiesFailure', error);\n      });\n};"]}]}