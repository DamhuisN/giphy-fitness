{"remainingRequest":"/Users/nandamhuis/Documents/giphy-vibes/demo/node_modules/babel-loader/lib/index.js!/Users/nandamhuis/Documents/giphy-vibes/demo/node_modules/eslint-loader/index.js??ref--13-0!/Users/nandamhuis/Documents/giphy-vibes/demo/src/vuex/mutations/giphies.js","dependencies":[{"path":"/Users/nandamhuis/Documents/giphy-vibes/demo/src/vuex/mutations/giphies.js","mtime":1614456062424},{"path":"/Users/nandamhuis/Documents/giphy-vibes/demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nandamhuis/Documents/giphy-vibes/demo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/nandamhuis/Documents/giphy-vibes/demo/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL25hbmRhbWh1aXMvRG9jdW1lbnRzL2dpcGh5LXZpYmVzL2RlbW8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgeyBHSVBISUVTX1JFUVVFU1QsIEdJUEhJRVNfU1VDQ0VTUywgR0lQSElFU19GQUlMVVJFIH0gZnJvbSAnLi4vLi4vdnVleC9hY3Rpb25zL2dpcGhpZXMnOwovKioKICogVGhpcyBpcyB0aGUgbXV0YXRvciBvYmplY3QgZm9yIHRoZSBnZXRHaXBoaWVzIHN0YXRlLCBpbmRpY2F0aW5nIGhvdyB0aGUgdnVleCBkYXRhIHN0b3JlIHdpbGwgYmUgbXV0YXRlZCBiYXNlZCBvbiBwYXNzZWQgZGF0YQogKiBJZiB0aGUgcmVxdWVzdCBpcyBzdWNjZXNzZnVsIHdlIGNvbmNhdCB0aGUgZGF0YSBpbnN0ZWFkIG9mIHJlcGxhY2luZyBpdCBzbyB3ZSBjYW4gc2hvdyBpbmZpbml0ZSBnaXBoaWVzCiAqIEBwYXJhbSB7T2JqZWN0fSBzdGF0ZSAtIFRoZSB2dWV4IHN0YXRlIHRoYXQgd2Ugd2lsbCBtYW5pcHVsYXRlCiAqIEBwYXJhbSB7T2JqZWN0fSBjb250ZXh0IC0gVGhlIHBhc3NlZCBkYXRhIGZyb20gdGhlIHZ1ZXggYWN0aW9uCiAqLwoKZXhwb3J0IHZhciBnZXRHaXBoaWVzTXV0YXRpb24gPSBmdW5jdGlvbiBnZXRHaXBoaWVzTXV0YXRpb24oc3RhdGUsIGNvbnRleHQpIHsKICBpZiAoIXN0YXRlKSB7CiAgICBzdGF0ZSA9IHsKICAgICAgaXNMb2FkaW5nOiBmYWxzZQogICAgfTsKICB9IC8vIEJlY2F1c2Ugd2UgdXNlIHBhZ2luYXRpb24sIHdlIHVzZSB0aGUgZXhpc3RpbmcgZGF0YSBvciBhbiBlbXB0eSBhcnJheSB0aGF0IHdlIHdpbGwgY29uY2F0IGluCgoKICB2YXIgZXhpc3RpbmdEYXRhID0gc3RhdGUuZ2lwaGllcy5kYXRhIHx8IFtdOwoKICBzd2l0Y2ggKGNvbnRleHQudHlwZSkgewogICAgY2FzZSBHSVBISUVTX1JFUVVFU1Q6CiAgICAgIHN0YXRlLmdpcGhpZXMgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLmdpcGhpZXMpLCB7fSwgewogICAgICAgIGlzTG9hZGluZzogdHJ1ZQogICAgICB9KTsKICAgICAgYnJlYWs7CgogICAgY2FzZSBHSVBISUVTX1NVQ0NFU1M6CiAgICAgIHN0YXRlLmdpcGhpZXMgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLmdpcGhpZXMpLCB7fSwgewogICAgICAgIGRhdGE6IGV4aXN0aW5nRGF0YS5jb25jYXQoY29udGV4dC5wYXlsb2FkLmRhdGEpLAogICAgICAgIGlzTG9hZGluZzogZmFsc2UKICAgICAgfSk7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgR0lQSElFU19GQUlMVVJFOgogICAgICBzdGF0ZS5naXBoaWVzID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZS5naXBoaWVzKSwge30sIHsKICAgICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICAgIGVycm9yOiBjb250ZXh0LmVycm9yLmNvZGUKICAgICAgfSk7CiAgICAgIGJyZWFrOwoKICAgIGRlZmF1bHQ6CiAgICAgIGJyZWFrOwogIH0KfTs="},{"version":3,"sources":["/Users/nandamhuis/Documents/giphy-vibes/demo/src/vuex/mutations/giphies.js"],"names":["GIPHIES_REQUEST","GIPHIES_SUCCESS","GIPHIES_FAILURE","getGiphiesMutation","state","context","isLoading","existingData","giphies","data","type","concat","payload","error","code"],"mappings":";;AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAA0CC,eAA1C,QAAgE,4BAAhE;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAQC,OAAR,EAAoB;AACpD,MAAI,CAACD,KAAL,EAAY;AACVA,IAAAA,KAAK,GAAG;AACNE,MAAAA,SAAS,EAAE;AADL,KAAR;AAGD,GALmD,CAOpD;;;AACA,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAAN,CAAcC,IAAd,IAAsB,EAA3C;;AAEA,UAAQJ,OAAO,CAACK,IAAhB;AACE,SAAKV,eAAL;AACEI,MAAAA,KAAK,CAACI,OAAN,mCACKJ,KAAK,CAACI,OADX;AAEEF,QAAAA,SAAS,EAAE;AAFb;AAIA;;AACF,SAAKL,eAAL;AACEG,MAAAA,KAAK,CAACI,OAAN,mCACKJ,KAAK,CAACI,OADX;AAEEC,QAAAA,IAAI,EAAEF,YAAY,CAACI,MAAb,CAAoBN,OAAO,CAACO,OAAR,CAAgBH,IAApC,CAFR;AAGEH,QAAAA,SAAS,EAAE;AAHb;AAKA;;AACF,SAAKJ,eAAL;AACEE,MAAAA,KAAK,CAACI,OAAN,mCACKJ,KAAK,CAACI,OADX;AAEEF,QAAAA,SAAS,EAAE,KAFb;AAGEO,QAAAA,KAAK,EAAER,OAAO,CAACQ,KAAR,CAAcC;AAHvB;AAKA;;AACF;AACE;AAtBJ;AAwBD,CAlCM","sourcesContent":["import {GIPHIES_REQUEST, GIPHIES_SUCCESS, GIPHIES_FAILURE} from '../../vuex/actions/giphies';\n\n/**\n * This is the mutator object for the getGiphies state, indicating how the vuex data store will be mutated based on passed data\n * If the request is successful we concat the data instead of replacing it so we can show infinite giphies\n * @param {Object} state - The vuex state that we will manipulate\n * @param {Object} context - The passed data from the vuex action\n */\nexport const getGiphiesMutation = (state, context) => {\n  if (!state) {\n    state = {\n      isLoading: false\n    };\n  }\n\n  // Because we use pagination, we use the existing data or an empty array that we will concat in\n  const existingData = state.giphies.data || [];\n\n  switch (context.type) {\n    case GIPHIES_REQUEST:\n      state.giphies = {\n        ...state.giphies,\n        isLoading: true\n      };\n      break;\n    case GIPHIES_SUCCESS:\n      state.giphies = {\n        ...state.giphies,\n        data: existingData.concat(context.payload.data),\n        isLoading: false\n      };\n      break;\n    case GIPHIES_FAILURE:\n      state.giphies = {\n        ...state.giphies,\n        isLoading: false,\n        error: context.error.code\n      };\n      break;\n    default:\n      break;\n  }\n};\n"]}]}