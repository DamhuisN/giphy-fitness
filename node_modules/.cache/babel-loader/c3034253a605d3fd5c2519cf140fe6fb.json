{"remainingRequest":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/babel-loader/lib/index.js!/Users/nandamhuis/Documents/giphy-vibes/node_modules/eslint-loader/index.js??ref--13-0!/Users/nandamhuis/Documents/giphy-vibes/src/vuex/mutations/giphies.js","dependencies":[{"path":"/Users/nandamhuis/Documents/giphy-vibes/src/vuex/mutations/giphies.js","mtime":1614456062424},{"path":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL25hbmRhbWh1aXMvRG9jdW1lbnRzL2dpcGh5LXZpYmVzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IHsgR0lQSElFU19SRVFVRVNULCBHSVBISUVTX1NVQ0NFU1MsIEdJUEhJRVNfRkFJTFVSRSB9IGZyb20gJy4uLy4uL3Z1ZXgvYWN0aW9ucy9naXBoaWVzJzsKLyoqCiAqIFRoaXMgaXMgdGhlIG11dGF0b3Igb2JqZWN0IGZvciB0aGUgZ2V0R2lwaGllcyBzdGF0ZSwgaW5kaWNhdGluZyBob3cgdGhlIHZ1ZXggZGF0YSBzdG9yZSB3aWxsIGJlIG11dGF0ZWQgYmFzZWQgb24gcGFzc2VkIGRhdGEKICogSWYgdGhlIHJlcXVlc3QgaXMgc3VjY2Vzc2Z1bCB3ZSBjb25jYXQgdGhlIGRhdGEgaW5zdGVhZCBvZiByZXBsYWNpbmcgaXQgc28gd2UgY2FuIHNob3cgaW5maW5pdGUgZ2lwaGllcwogKiBAcGFyYW0ge09iamVjdH0gc3RhdGUgLSBUaGUgdnVleCBzdGF0ZSB0aGF0IHdlIHdpbGwgbWFuaXB1bGF0ZQogKiBAcGFyYW0ge09iamVjdH0gY29udGV4dCAtIFRoZSBwYXNzZWQgZGF0YSBmcm9tIHRoZSB2dWV4IGFjdGlvbgogKi8KCmV4cG9ydCB2YXIgZ2V0R2lwaGllc011dGF0aW9uID0gZnVuY3Rpb24gZ2V0R2lwaGllc011dGF0aW9uKHN0YXRlLCBjb250ZXh0KSB7CiAgaWYgKCFzdGF0ZSkgewogICAgc3RhdGUgPSB7CiAgICAgIGlzTG9hZGluZzogZmFsc2UKICAgIH07CiAgfSAvLyBCZWNhdXNlIHdlIHVzZSBwYWdpbmF0aW9uLCB3ZSB1c2UgdGhlIGV4aXN0aW5nIGRhdGEgb3IgYW4gZW1wdHkgYXJyYXkgdGhhdCB3ZSB3aWxsIGNvbmNhdCBpbgoKCiAgdmFyIGV4aXN0aW5nRGF0YSA9IHN0YXRlLmdpcGhpZXMuZGF0YSB8fCBbXTsKCiAgc3dpdGNoIChjb250ZXh0LnR5cGUpIHsKICAgIGNhc2UgR0lQSElFU19SRVFVRVNUOgogICAgICBzdGF0ZS5naXBoaWVzID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZS5naXBoaWVzKSwge30sIHsKICAgICAgICBpc0xvYWRpbmc6IHRydWUKICAgICAgfSk7CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgR0lQSElFU19TVUNDRVNTOgogICAgICBzdGF0ZS5naXBoaWVzID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBzdGF0ZS5naXBoaWVzKSwge30sIHsKICAgICAgICBkYXRhOiBleGlzdGluZ0RhdGEuY29uY2F0KGNvbnRleHQucGF5bG9hZC5kYXRhKSwKICAgICAgICBpc0xvYWRpbmc6IGZhbHNlCiAgICAgIH0pOwogICAgICBicmVhazsKCiAgICBjYXNlIEdJUEhJRVNfRkFJTFVSRToKICAgICAgc3RhdGUuZ2lwaGllcyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgc3RhdGUuZ2lwaGllcyksIHt9LCB7CiAgICAgICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgICAgICBlcnJvcjogY29udGV4dC5lcnJvci5jb2RlCiAgICAgIH0pOwogICAgICBicmVhazsKCiAgICBkZWZhdWx0OgogICAgICBicmVhazsKICB9Cn07"},{"version":3,"sources":["/Users/nandamhuis/Documents/giphy-vibes/src/vuex/mutations/giphies.js"],"names":["GIPHIES_REQUEST","GIPHIES_SUCCESS","GIPHIES_FAILURE","getGiphiesMutation","state","context","isLoading","existingData","giphies","data","type","concat","payload","error","code"],"mappings":";;AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAA0CC,eAA1C,QAAgE,4BAAhE;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAQC,OAAR,EAAoB;AACpD,MAAI,CAACD,KAAL,EAAY;AACVA,IAAAA,KAAK,GAAG;AACNE,MAAAA,SAAS,EAAE;AADL,KAAR;AAGD,GALmD,CAOpD;;;AACA,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAAN,CAAcC,IAAd,IAAsB,EAA3C;;AAEA,UAAQJ,OAAO,CAACK,IAAhB;AACE,SAAKV,eAAL;AACEI,MAAAA,KAAK,CAACI,OAAN,mCACKJ,KAAK,CAACI,OADX;AAEEF,QAAAA,SAAS,EAAE;AAFb;AAIA;;AACF,SAAKL,eAAL;AACEG,MAAAA,KAAK,CAACI,OAAN,mCACKJ,KAAK,CAACI,OADX;AAEEC,QAAAA,IAAI,EAAEF,YAAY,CAACI,MAAb,CAAoBN,OAAO,CAACO,OAAR,CAAgBH,IAApC,CAFR;AAGEH,QAAAA,SAAS,EAAE;AAHb;AAKA;;AACF,SAAKJ,eAAL;AACEE,MAAAA,KAAK,CAACI,OAAN,mCACKJ,KAAK,CAACI,OADX;AAEEF,QAAAA,SAAS,EAAE,KAFb;AAGEO,QAAAA,KAAK,EAAER,OAAO,CAACQ,KAAR,CAAcC;AAHvB;AAKA;;AACF;AACE;AAtBJ;AAwBD,CAlCM","sourcesContent":["import {GIPHIES_REQUEST, GIPHIES_SUCCESS, GIPHIES_FAILURE} from '../../vuex/actions/giphies';\n\n/**\n * This is the mutator object for the getGiphies state, indicating how the vuex data store will be mutated based on passed data\n * If the request is successful we concat the data instead of replacing it so we can show infinite giphies\n * @param {Object} state - The vuex state that we will manipulate\n * @param {Object} context - The passed data from the vuex action\n */\nexport const getGiphiesMutation = (state, context) => {\n  if (!state) {\n    state = {\n      isLoading: false\n    };\n  }\n\n  // Because we use pagination, we use the existing data or an empty array that we will concat in\n  const existingData = state.giphies.data || [];\n\n  switch (context.type) {\n    case GIPHIES_REQUEST:\n      state.giphies = {\n        ...state.giphies,\n        isLoading: true\n      };\n      break;\n    case GIPHIES_SUCCESS:\n      state.giphies = {\n        ...state.giphies,\n        data: existingData.concat(context.payload.data),\n        isLoading: false\n      };\n      break;\n    case GIPHIES_FAILURE:\n      state.giphies = {\n        ...state.giphies,\n        isLoading: false,\n        error: context.error.code\n      };\n      break;\n    default:\n      break;\n  }\n};\n"]}]}