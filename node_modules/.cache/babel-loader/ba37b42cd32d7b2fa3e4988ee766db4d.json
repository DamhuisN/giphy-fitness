{"remainingRequest":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/babel-loader/lib/index.js!/Users/nandamhuis/Documents/giphy-vibes/node_modules/eslint-loader/index.js??ref--13-0!/Users/nandamhuis/Documents/giphy-vibes/src/helpers/giphy-helper.js","dependencies":[{"path":"/Users/nandamhuis/Documents/giphy-vibes/src/helpers/giphy-helper.js","mtime":1614456207129},{"path":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBDT05TVEFOVFMgZnJvbSAnQC9jb25zdGFudHMnOyAvLyBUaGUgYmFzZSBnaXBoeSBBUEkKCnZhciBiYXNlVXJsID0gJ2h0dHBzOi8vYXBpLmdpcGh5LmNvbSc7Ci8qKgogKiBGZXRjaCBhIHBhZ2luYXRlZCBzZWxlY3Rpb24gb2YgZ2lwaGllcyBmcm9tIHRoZSBnaXBoeSBBUEkgd2l0aCBhIHN1YmplY3QsIG9mZnNldCBhbmQgbGltaXQKICogUGFyYW1ldGVycyB1c2UgZmFsbGJhY2sgdmFsdWVzIHRvIGltcHJvdmUgc3RhYmlsaXR5CiAqIEBwYXJhbSB7U3RyaW5nfSBzdWJqZWN0IC0gVGhlIHN1YmplY3QgdG8gZ2V0IGdpcGhpZXMgYWJvdXQKICogQHBhcmFtIHtTdHJpbmd9IG9mZnNldCAtIFRoZSBvZmZzZXQgb2YgcGFnaW5hdGVkIGdpcGhpZXMKICogQHBhcmFtIHtTdHJpbmd9IGxpbWl0IC0gVGhlIGxpbWl0IG9mIGdpcGhpZXMgdG8gZ2V0CiAqLwoKZXhwb3J0IHZhciBmZXRjaEdpcGhpZXMgPSBmdW5jdGlvbiBmZXRjaEdpcGhpZXMoKSB7CiAgdmFyIHN1YmplY3QgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6ICcnOwogIHZhciBvZmZzZXQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDA7CiAgdmFyIGxpbWl0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAyMDsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgYXhpb3MuZ2V0KCIiLmNvbmNhdChiYXNlVXJsLCAiL3YxL2dpZnMvc2VhcmNoP2FwaV9rZXk9IikuY29uY2F0KENPTlNUQU5UUy5HSVBIWV9BUElfS0VZLCAiJnE9IikuY29uY2F0KHN1YmplY3QsICImbGltaXQ9IikuY29uY2F0KGxpbWl0LCAiJm9mZnNldD0iKS5jb25jYXQob2Zmc2V0LCAiJnJhdGluZz1nJmxhbmc9ZW4iKSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgIHJlc29sdmUoewogICAgICAgIGRhdGE6IHJlc3VsdC5kYXRhCiAgICAgIH0pOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIHJlamVjdChlcnJvcik7CiAgICB9KTsKICB9KTsKfTsKZXhwb3J0IGRlZmF1bHQgewogIGZldGNoR2lwaGllczogZmV0Y2hHaXBoaWVzCn07"},{"version":3,"sources":["/Users/nandamhuis/Documents/giphy-vibes/src/helpers/giphy-helper.js"],"names":["axios","CONSTANTS","baseUrl","fetchGiphies","subject","offset","limit","Promise","resolve","reject","get","GIPHY_API_KEY","then","result","data","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;AACA,IAAMC,OAAO,GAAG,uBAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAA0C;AAAA,MAAzCC,OAAyC,uEAA/B,EAA+B;AAAA,MAA3BC,MAA2B,uEAAlB,CAAkB;AAAA,MAAfC,KAAe,uEAAP,EAAO;AAClE,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCT,IAAAA,KAAK,CACFU,GADH,WACUR,OADV,qCAC4CD,SAAS,CAACU,aADtD,gBACyEP,OADzE,oBAC0FE,KAD1F,qBAC0GD,MAD1G,wBAEGO,IAFH,CAEQ,UAAAC,MAAM,EAAI;AACdL,MAAAA,OAAO,CAAC;AAACM,QAAAA,IAAI,EAAED,MAAM,CAACC;AAAd,OAAD,CAAP;AACD,KAJH,EAKGC,KALH,CAKS,UAAAC,KAAK,EAAI;AACdP,MAAAA,MAAM,CAACO,KAAD,CAAN;AACD,KAPH;AAQD,GATI,CAAP;AAUH,CAXM;AAaP,eAAe;AACXb,EAAAA,YAAY,EAAZA;AADW,CAAf","sourcesContent":["import axios from 'axios';\nimport CONSTANTS from '@/constants';\n\n// The base giphy API\nconst baseUrl = 'https://api.giphy.com';\n\n/**\n * Fetch a paginated selection of giphies from the giphy API with a subject, offset and limit\n * Parameters use fallback values to improve stability\n * @param {String} subject - The subject to get giphies about\n * @param {String} offset - The offset of paginated giphies\n * @param {String} limit - The limit of giphies to get\n */\nexport const fetchGiphies = (subject = '', offset = 0, limit = 20) => {\n    return new Promise((resolve, reject) => {\n        axios\n          .get(`${baseUrl}/v1/gifs/search?api_key=${CONSTANTS.GIPHY_API_KEY}&q=${subject}&limit=${limit}&offset=${offset}&rating=g&lang=en`)\n          .then(result => {\n            resolve({data: result.data});\n          })\n          .catch(error => {\n            reject(error);\n          });\n      });\n}\n\nexport default {\n    fetchGiphies\n};"]}]}