{"remainingRequest":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/nandamhuis/Documents/giphy-vibes/src/components/home-page.vue?vue&type=template&id=2d0e3746","dependencies":[{"path":"/Users/nandamhuis/Documents/giphy-vibes/src/components/home-page.vue","mtime":1614457740998},{"path":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nandamhuis/Documents/giphy-vibes/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGgxPkZpdCBhdCBob21lIGluc3BpcmF0aW9uPC9oMT4KICA8ZGl2IGNsYXNzPSJncmlkIj4KICAgICAgIDxpbWcgdi1mb3I9Iml0ZW0gaW4gZ2lwaGllcy5kYXRhIiA6a2V5PSJpdGVtLmltYWdlcy5vcmlnaW5hbC51cmwiIDpzcmM9Iml0ZW0uaW1hZ2VzLm9yaWdpbmFsLnVybCIgOmFsdD0iaXRlbS50aXRsZSI+CiAgICAgICA8ZGl2IHYtaWY9ImdpcGhpZXMuaXNMb2FkaW5nIiBjbGFzcz0ibG9hZGVyIj5Mb2FkaW5nLi4uPC9kaXY+CiAgPC9kaXY+Cg=="},{"version":3,"sources":["/Users/nandamhuis/Documents/giphy-vibes/src/components/home-page.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;OACZ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;OACnH,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/nandamhuis/Documents/giphy-vibes/src/components/home-page.vue","sourceRoot":"","sourcesContent":["<template>\n  <h1>Fit at home inspiration</h1>\n  <div class=\"grid\">\n       <img v-for=\"item in giphies.data\" :key=\"item.images.original.url\" :src=\"item.images.original.url\" :alt=\"item.title\">\n       <div v-if=\"giphies.isLoading\" class=\"loader\">Loading...</div>\n  </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex';\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      offset: 0,\n      limit: 20,\n      scrollOffset: 700\n    }\n  },\n  /**\n  * The created lifecycle hook is called on load of the component. \n  * There we initiate the infinite scroll and fetch the initial set of giphies\n  */\n  created() {\n    this.initInfiniteScroll();\n    this.fetchGiphies();\n  },\n  /**\n  * In the computed values we link the giphies state from the store to a member variable of the component\n  * Vuex allows you to do this automated using the ...mapState method to handle the mapping for you\n  * For this we use the images.original.url, see https://developers.giphy.com/explorer for reference\n  */\n  computed: {\n      ...mapState({\n          giphies: state => {\n            return  state.giphies;\n          },\n      })\n  },\n  methods: {\n    /**\n    * Fetch a collection of giphies with the passed offset or the configured offset\n    * @param {Number} offset\n    */\n    fetchGiphies(offset) {\n      this.offset = offset || this.offset;\n      this.$store.dispatch('getGiphies', {subject: 'fitness', offset: this.offset, limit: this.limit});\n    },\n    /**\n    * Handle the infinite scroll logic by adding an event listener. If we get within the threshold of the bottom of the page (the scrollOffset, which is 2 images high)\n    * We fetch the next set of giphies, while blocking any further requests with the isLoading property\n    */\n    initInfiniteScroll() {\n      document.addEventListener('scroll', () => {\n        const maxScroll = Math.max(window.pageYOffset, document.documentElement.scrollTop, document.body.scrollTop);\n        const bottomOfWindow = (maxScroll + window.innerHeight) >= (document.documentElement.offsetHeight - this.scrollOffset);\n\n        if (bottomOfWindow && !this.giphies.isLoading) {\n          this.fetchGiphies(this.offset + this.limit);\n        }\n      });\n    }\n  }\n}\n</script>\n<style>\nh1 {\n    font-family: helvetica;\n    padding: 32px;\n    background: #DDFCC7;\n}\n.grid {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n}\n.grid img {\n  height: 350px;\n  width: 50%;\n}\n.loader,\n.loader:before,\n.loader:after {\n  border-radius: 50%;\n  width: 2.5em;\n  height: 2.5em;\n  -webkit-animation-fill-mode: both;\n  animation-fill-mode: both;\n  -webkit-animation: load 1.8s infinite ease-in-out;\n  animation: load 1.8s infinite ease-in-out;\n}\n.loader {\n  color: #000000;\n  font-size: 10px;\n  margin: 80px auto;\n  position: relative;\n  text-indent: -9999em;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n  -webkit-animation-delay: -0.16s;\n  animation-delay: -0.16s;\n}\n.loader:before,\n.loader:after {\n  content: '';\n  position: absolute;\n  top: 0;\n}\n.loader:before {\n  left: -3.5em;\n  -webkit-animation-delay: -0.32s;\n  animation-delay: -0.32s;\n}\n.loader:after {\n  left: 3.5em;\n}\n\n@-webkit-keyframes load {\n  0%,\n  80%,\n  100% {\n    box-shadow: 0 2.5em 0 -1.3em;\n  }\n  40% {\n    box-shadow: 0 2.5em 0 0;\n  }\n}\n\n@keyframes load {\n  0%,\n  80%,\n  100% {\n    box-shadow: 0 2.5em 0 -1.3em;\n  }\n  40% {\n    box-shadow: 0 2.5em 0 0;\n  }\n}\n\n@media(max-width: 768px) {\n.grid img {\n  width: 100%;\n}\n}\n</style>"]}]}